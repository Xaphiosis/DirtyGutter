/*
 * XSymbolSubst - String translator for Isabelle 2023 xsymbols.
 *
 * Copyright (C) 2024 Rafal Kolanski
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package lcm;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.HashMap;
import java.util.Map;

public class XSymbolSubst {
    public static final Pattern xsymbolPat = Pattern.compile("\\\\<(\\^?\\w+)>");
    public static final Map<String,String> symbolMap = makeSymbolMap();

    private static Map<String,String> makeSymbolMap() {
        Map<String,String> map = new HashMap<String,String>(500);

        map.put("\\<a>", "𝖺");
        map.put("\\<A>", "𝒜");
        map.put("\\<aa>", "𝔞");
        map.put("\\<AA>", "𝔄");
        map.put("\\<^action>", "☛");
        map.put("\\<acute>", "´");
        map.put("\\<aleph>", "ℵ");
        map.put("\\<alpha>", "α");
        map.put("\\<amalg>", "⨿");
        map.put("\\<and>", "∧");
        map.put("\\<And>", "⋀");
        map.put("\\<angle>", "∠");
        map.put("\\<approx>", "≈");
        map.put("\\<asymp>", "≍");
        map.put("\\<bar>", "¦");
        map.put("\\<b>", "𝖻");
        map.put("\\<B>", "ℬ");
        map.put("\\<bbar>", "⫿");
        map.put("\\<bb>", "𝔟");
        map.put("\\<BB>", "𝔅");
        map.put("\\<bbbA>", "𝔸");
        map.put("\\<bbbD>", "𝔻");
        map.put("\\<bbbE>", "𝔼");
        map.put("\\<bbbF>", "𝔽");
        map.put("\\<bbbG>", "𝔾");
        map.put("\\<bbbH>", "ℍ");
        map.put("\\<bbbI>", "𝕀");
        map.put("\\<bbbJ>", "𝕁");
        map.put("\\<bbbK>", "𝕂");
        map.put("\\<bbbL>", "𝕃");
        map.put("\\<bbbM>", "𝕄");
        map.put("\\<bbbO>", "𝕆");
        map.put("\\<bbbP>", "ℙ");
        map.put("\\<bbbS>", "𝕊");
        map.put("\\<bbbT>", "𝕋");
        map.put("\\<bbbU>", "𝕌");
        map.put("\\<bbbV>", "𝕍");
        map.put("\\<bbbW>", "𝕎");
        map.put("\\<bbbX>", "𝕏");
        map.put("\\<bbbY>", "𝕐");
        map.put("\\<beta>", "β");
        map.put("\\<^bigskip>", "━");
        map.put("\\<bind>", "⤜");
        map.put("\\<^bold>", "❙");
        map.put("\\<bool>", "𝔹");
        map.put("\\<bottom>", "⊥");
        map.put("\\<bowtie>", "⨝");
        map.put("\\<box>", "□");
        map.put("\\<^bsub>", "⇘");
        map.put("\\<^bsup>", "⇗");
        map.put("\\<bullet>", "∙");
        map.put("\\<^cancel>", "⌦");
        map.put("\\<c>", "𝖼");
        map.put("\\<C>", "𝒞");
        map.put("\\<cc>", "𝔠");
        map.put("\\<CC>", "ℭ");
        map.put("\\<cdot>", "⋅");
        map.put("\\<cdots>", "⋯");
        map.put("\\<cedilla>", "¸");
        map.put("\\<cent>", "¢");
        map.put("\\<checkmark>", "✓");
        map.put("\\<chi>", "χ");
        map.put("\\<circ>", "∘");
        map.put("\\<circle>", "○");
        map.put("\\<close>", "›");
        map.put("\\<clubsuit>", "♣");
        map.put("\\<Colon>", "∷");
        map.put("\\<comment>", "―");
        map.put("\\<complex>", "ℂ");
        map.put("\\<cong>", "≅");
        map.put("\\<Coprod>", "∐");
        map.put("\\<copyright>", "©");
        map.put("\\<crossmark>", "✗");
        map.put("\\<currency>", "¤");
        map.put("\\<dagger>", "†");
        map.put("\\<d>", "𝖽");
        map.put("\\<D>", "𝒟");
        map.put("\\<ddagger>", "‡");
        map.put("\\<dd>", "𝔡");
        map.put("\\<DD>", "𝔇");
        map.put("\\<degree>", "°");
        map.put("\\<delta>", "δ");
        map.put("\\<Delta>", "Δ");
        map.put("\\<^descr>", "➧");
        map.put("\\<diamond>", "◇");
        map.put("\\<diamondop>", "⋄");
        map.put("\\<diamondsuit>", "♢");
        map.put("\\<dieresis>", "¨");
        map.put("\\<^dir>", "🗀");
        map.put("\\<div>", "÷");
        map.put("\\<^doc>", "📓");
        map.put("\\<doteq>", "≐");
        map.put("\\<dots>", "…");
        map.put("\\<down>", "↓");
        map.put("\\<Down>", "⇓");
        map.put("\\<downharpoonleft>", "⇃");
        map.put("\\<downharpoonright>", "⇂");
        map.put("\\<e>", "𝖾");
        map.put("\\<E>", "ℰ");
        map.put("\\<ee>", "𝔢");
        map.put("\\<EE>", "𝔈");
        map.put("\\<eight>", "𝟴");
        map.put("\\<^emph>", "∗");
        map.put("\\<emptyset>", "∅");
        map.put("\\<^enum>", "▸");
        map.put("\\<epsilon>", "ε");
        map.put("\\<equiv>", "≡");
        map.put("\\<^esub>", "⇙");
        map.put("\\<^esup>", "⇖");
        map.put("\\<eta>", "η");
        map.put("\\<euro>", "€");
        map.put("\\<exclamdown>", "¡");
        map.put("\\<exists>", "∃");
        map.put("\\<f>", "𝖿");
        map.put("\\<F>", "ℱ");
        map.put("\\<ff>", "𝔣");
        map.put("\\<FF>", "𝔉");
        map.put("\\<^file>", "🗏");
        map.put("\\<five>", "𝟱");
        map.put("\\<flat>", "♭");
        map.put("\\<^footnote>", "⁋");
        map.put("\\<forall>", "∀");
        map.put("\\<four>", "𝟰");
        map.put("\\<frown>", "⌢");
        map.put("\\<gamma>", "γ");
        map.put("\\<Gamma>", "Γ");
        map.put("\\<ge>", "≥");
        map.put("\\<g>", "𝗀");
        map.put("\\<G>", "𝒢");
        map.put("\\<gg>", "𝔤");
        map.put("\\<GG>", "𝔊");
        map.put("\\<ggreater>", "≫");
        map.put("\\<greaterapprox>", "⪆");
        map.put("\\<greatersim>", "≳");
        map.put("\\<guillemotleft>", "«");
        map.put("\\<guillemotright>", "»");
        map.put("\\<heartsuit>", "♡");
        map.put("\\<^here>", "⌂");
        map.put("\\<h>", "𝗁");
        map.put("\\<H>", "ℋ");
        map.put("\\<hh>", "𝔥");
        map.put("\\<HH>", "ℌ");
        map.put("\\<hole>", "⌑");
        map.put("\\<hookleftarrow>", "↩");
        map.put("\\<hookrightarrow>", "↪");
        map.put("\\<hungarumlaut>", "˝");
        map.put("\\<hyphen>", "­");
        map.put("\\<i>", "𝗂");
        map.put("\\<I>", "ℐ");
        map.put("\\<ii>", "𝔦");
        map.put("\\<II>", "ℑ");
        map.put("\\<in>", "∈");
        map.put("\\<index>", "ı");
        map.put("\\<infinity>", "∞");
        map.put("\\<integral>", "∫");
        map.put("\\<inter>", "∩");
        map.put("\\<Inter>", "⋂");
        map.put("\\<interleave>", "⫴");
        map.put("\\<int>", "ℤ");
        map.put("\\<inverse>", "¯");
        map.put("\\<iota>", "ι");
        map.put("\\<^item>", "▪");
        map.put("\\<j>", "𝗃");
        map.put("\\<J>", "𝒥");
        map.put("\\<jj>", "𝔧");
        map.put("\\<JJ>", "𝔍");
        map.put("\\<Join>", "⋈");
        map.put("\\<kappa>", "κ");
        map.put("\\<k>", "𝗄");
        map.put("\\<K>", "𝒦");
        map.put("\\<kk>", "𝔨");
        map.put("\\<KK>", "𝔎");
        map.put("\\<lambda>", "λ");
        map.put("\\<Lambda>", "Λ");
        map.put("\\<langle>", "⟨");
        map.put("\\<lblot>", "⦉");
        map.put("\\<lbrace>", "⦃");
        map.put("\\<lbrakk>", "⟦");
        map.put("\\<lceil>", "⌈");
        map.put("\\<le>", "≤");
        map.put("\\<leadsto>", "↝");
        map.put("\\<leftarrow>", "←");
        map.put("\\<Leftarrow>", "⇐");
        map.put("\\<leftharpoondown>", "↽");
        map.put("\\<leftharpoonup>", "↼");
        map.put("\\<leftrightarrow>", "↔");
        map.put("\\<Leftrightarrow>", "⇔");
        map.put("\\<lessapprox>", "⪅");
        map.put("\\<lesssim>", "≲");
        map.put("\\<lfloor>", "⌊");
        map.put("\\<lhd>", "⊲");
        map.put("\\<l>", "𝗅");
        map.put("\\<L>", "ℒ");
        map.put("\\<llangle>", "⟪");
        map.put("\\<Lleftarrow>", "⇚");
        map.put("\\<lless>", "≪");
        map.put("\\<ll>", "𝔩");
        map.put("\\<LL>", "𝔏");
        map.put("\\<longleftarrow>", "⟵");
        map.put("\\<Longleftarrow>", "⟸");
        map.put("\\<longleftrightarrow>", "⟷");
        map.put("\\<Longleftrightarrow>", "⟺");
        map.put("\\<longlongleftarrow>", "⤎");
        map.put("\\<longlonglongleftarrow>", "⇠");
        map.put("\\<longlonglongrightarrow>", "⇢");
        map.put("\\<longlongrightarrow>", "⤏");
        map.put("\\<longmapsto>", "⟼");
        map.put("\\<longrightarrow>", "⟶");
        map.put("\\<Longrightarrow>", "⟹");
        map.put("\\<lozenge>", "◊");
        map.put("\\<lparr>", "⦇");
        map.put("\\<mapsto>", "↦");
        map.put("\\<^marker>", "✐");
        map.put("\\<^medskip>", "┉");
        map.put("\\<mho>", "℧");
        map.put("\\<midarrow>", "─");
        map.put("\\<Midarrow>", "═");
        map.put("\\<minusplus>", "∓");
        map.put("\\<m>", "𝗆");
        map.put("\\<M>", "ℳ");
        map.put("\\<mm>", "𝔪");
        map.put("\\<MM>", "𝔐");
        map.put("\\<mu>", "μ");
        map.put("\\<nabla>", "∇");
        map.put("\\<nat>", "ℕ");
        map.put("\\<natural>", "♮");
        map.put("\\<newline>", "⏎");
        map.put("\\<nexists>", "∄");
        map.put("\\<nine>", "𝟵");
        map.put("\\<n>", "𝗇");
        map.put("\\<N>", "𝒩");
        map.put("\\<nn>", "𝔫");
        map.put("\\<NN>", "𝔑");
        map.put("\\<^noindent>", "⇤");
        map.put("\\<not>", "¬");
        map.put("\\<noteq>", "≠");
        map.put("\\<notin>", "∉");
        map.put("\\<nu>", "ν");
        map.put("\\<odot>", "⊙");
        map.put("\\<Odot>", "⨀");
        map.put("\\<ointegral>", "∮");
        map.put("\\<omega>", "ω");
        map.put("\\<Omega>", "Ω");
        map.put("\\<ominus>", "⊖");
        map.put("\\<one>", "𝟭");
        map.put("\\<onehalf>", "½");
        map.put("\\<onequarter>", "¼");
        map.put("\\<o>", "𝗈");
        map.put("\\<O>", "𝒪");
        map.put("\\<oo>", "𝔬");
        map.put("\\<OO>", "𝔒");
        map.put("\\<open>", "‹");
        map.put("\\<oplus>", "⊕");
        map.put("\\<Oplus>", "⨁");
        map.put("\\<or>", "∨");
        map.put("\\<Or>", "⋁");
        map.put("\\<ordfeminine>", "ª");
        map.put("\\<ordmasculine>", "º");
        map.put("\\<oslash>", "⊘");
        map.put("\\<otimes>", "⊗");
        map.put("\\<Otimes>", "⨂");
        map.put("\\<paragraph>", "¶");
        map.put("\\<parallel>", "∥");
        map.put("\\<Parallel>", "‖");
        map.put("\\<partial>", "∂");
        map.put("\\<phi>", "φ");
        map.put("\\<Phi>", "Φ");
        map.put("\\<pi>", "π");
        map.put("\\<Pi>", "Π");
        map.put("\\<plusminus>", "±");
        map.put("\\<pounds>", "£");
        map.put("\\<p>", "𝗉");
        map.put("\\<P>", "𝒫");
        map.put("\\<pp>", "𝔭");
        map.put("\\<PP>", "𝔓");
        map.put("\\<prec>", "≺");
        map.put("\\<preceq>", "≼");
        map.put("\\<Prod>", "∏");
        map.put("\\<propto>", "∝");
        map.put("\\<psi>", "ψ");
        map.put("\\<Psi>", "Ψ");
        map.put("\\<q>", "𝗊");
        map.put("\\<Q>", "𝒬");
        map.put("\\<qq>", "𝔮");
        map.put("\\<QQ>", "𝔔");
        map.put("\\<questiondown>", "¿");
        map.put("\\<rangle>", "⟩");
        map.put("\\<rat>", "ℚ");
        map.put("\\<rblot>", "⦊");
        map.put("\\<rbrace>", "⦄");
        map.put("\\<rbrakk>", "⟧");
        map.put("\\<rceil>", "⌉");
        map.put("\\<real>", "ℝ");
        map.put("\\<registered>", "®");
        map.put("\\<restriction>", "↾");
        map.put("\\<rfloor>", "⌋");
        map.put("\\<rhd>", "⊳");
        map.put("\\<rho>", "ρ");
        map.put("\\<rightarrow>", "→");
        map.put("\\<Rightarrow>", "⇒");
        map.put("\\<rightharpoondown>", "⇁");
        map.put("\\<rightharpoonup>", "⇀");
        map.put("\\<rightleftharpoons>", "⇌");
        map.put("\\<rparr>", "⦈");
        map.put("\\<r>", "𝗋");
        map.put("\\<R>", "ℛ");
        map.put("\\<rrangle>", "⟫");
        map.put("\\<Rrightarrow>", "⇛");
        map.put("\\<rr>", "𝔯");
        map.put("\\<RR>", "ℜ");
        map.put("\\<section>", "§");
        map.put("\\<setminus>", "∖");
        map.put("\\<seven>", "𝟳");
        map.put("\\<sharp>", "♯");
        map.put("\\<sigma>", "σ");
        map.put("\\<Sigma>", "Σ");
        map.put("\\<sim>", "∼");
        map.put("\\<simeq>", "≃");
        map.put("\\<six>", "𝟲");
        map.put("\\<^smallskip>", "┈");
        map.put("\\<smile>", "⌣");
        map.put("\\<some>", "ϵ");
        map.put("\\<spadesuit>", "♠");
        map.put("\\<sqdot>", "·");
        map.put("\\<sqinter>", "⊓");
        map.put("\\<Sqinter>", "⨅");
        map.put("\\<sqsubset>", "⊏");
        map.put("\\<sqsubseteq>", "⊑");
        map.put("\\<sqsupset>", "⊐");
        map.put("\\<sqsupseteq>", "⊒");
        map.put("\\<squnion>", "⊔");
        map.put("\\<Squnion>", "⨆");
        map.put("\\<s>", "𝗌");
        map.put("\\<S>", "𝒮");
        map.put("\\<sslash>", "⫽");
        map.put("\\<ss>", "𝔰");
        map.put("\\<SS>", "𝔖");
        map.put("\\<star>", "⋆");
        map.put("\\<stileturn>", "⊣");
        map.put("\\<^sub>", "⇩");
        map.put("\\<subset>", "⊂");
        map.put("\\<subseteq>", "⊆");
        map.put("\\<succ>", "≻");
        map.put("\\<succeq>", "≽");
        map.put("\\<Sum>", "∑");
        map.put("\\<^sup>", "⇧");
        map.put("\\<supset>", "⊃");
        map.put("\\<supseteq>", "⊇");
        map.put("\\<surd>", "√");
        map.put("\\<tau>", "τ");
        map.put("\\<then>", "⪢");
        map.put("\\<^theory_text>", "⬚");
        map.put("\\<theta>", "θ");
        map.put("\\<Theta>", "Θ");
        map.put("\\<three>", "𝟯");
        map.put("\\<threequarters>", "¾");
        map.put("\\<times>", "×");
        map.put("\\<top>", "⊤");
        map.put("\\<triangle>", "△");
        map.put("\\<triangleleft>", "◃");
        map.put("\\<triangleq>", "≜");
        map.put("\\<triangleright>", "▹");
        map.put("\\<t>", "𝗍");
        map.put("\\<T>", "𝒯");
        map.put("\\<tt>", "𝔱");
        map.put("\\<TT>", "𝔗");
        map.put("\\<tturnstile>", "⊩");
        map.put("\\<TTurnstile>", "⊫");
        map.put("\\<turnstile>", "⊢");
        map.put("\\<Turnstile>", "⊨");
        map.put("\\<two>", "𝟮");
        map.put("\\<^undefined>", "❖");
        map.put("\\<union>", "∪");
        map.put("\\<Union>", "⋃");
        map.put("\\<unlhd>", "⊴");
        map.put("\\<unrhd>", "⊵");
        map.put("\\<up>", "↑");
        map.put("\\<Up>", "⇑");
        map.put("\\<updown>", "↕");
        map.put("\\<Updown>", "⇕");
        map.put("\\<upharpoonleft>", "↿");
        map.put("\\<uplus>", "⊎");
        map.put("\\<Uplus>", "⨄");
        map.put("\\<upsilon>", "υ");
        map.put("\\<Upsilon>", "Υ");
        map.put("\\<^url>", "🌐");
        map.put("\\<u>", "𝗎");
        map.put("\\<U>", "𝒰");
        map.put("\\<uu>", "𝔲");
        map.put("\\<UU>", "𝔘");
        map.put("\\<^verbatim>", "▩");
        map.put("\\<v>", "𝗏");
        map.put("\\<V>", "𝒱");
        map.put("\\<vv>", "𝔳");
        map.put("\\<VV>", "𝔙");
        map.put("\\<wp>", "℘");
        map.put("\\<wrong>", "≀");
        map.put("\\<w>", "𝗐");
        map.put("\\<W>", "𝒲");
        map.put("\\<ww>", "𝔴");
        map.put("\\<WW>", "𝔚");
        map.put("\\<xi>", "ξ");
        map.put("\\<Xi>", "Ξ");
        map.put("\\<x>", "𝗑");
        map.put("\\<X>", "𝒳");
        map.put("\\<xx>", "𝔵");
        map.put("\\<XX>", "𝔛");
        map.put("\\<yen>", "¥");
        map.put("\\<y>", "𝗒");
        map.put("\\<Y>", "𝒴");
        map.put("\\<yy>", "𝔶");
        map.put("\\<YY>", "𝔜");
        map.put("\\<Zbij>", "⤖");
        map.put("\\<Zcat>", "⁀");
        map.put("\\<Zcomp>", "⨾");
        map.put("\\<Zdres>", "◁");
        map.put("\\<zero>", "𝟬");
        map.put("\\<zeta>", "ζ");
        map.put("\\<Zffun>", "⇻");
        map.put("\\<Zfinj>", "⤕");
        map.put("\\<Zhide>", "⧹");
        map.put("\\<Zinbag>", "⋿");
        map.put("\\<Zinj>", "↣");
        map.put("\\<Zndres>", "⩤");
        map.put("\\<Znrres>", "⩥");
        map.put("\\<Zpfun>", "⇸");
        map.put("\\<Zpinj>", "⤔");
        map.put("\\<Zprime>", "′");
        map.put("\\<Zproject>", "⨡");
        map.put("\\<Zpsurj>", "⤀");
        map.put("\\<Zrres>", "▷");
        map.put("\\<Zsemi>", "⨟");
        map.put("\\<Zspot>", "⦁");
        map.put("\\<Zsurj>", "↠");
        map.put("\\<Ztypecolon>", "⦂");
        map.put("\\<z>", "𝗓");
        map.put("\\<Z>", "𝒵");
        map.put("\\<zz>", "𝔷");
        map.put("\\<ZZ>", "ℨ");

        return map;
    }

    public static StringBuffer xsymbolToUnicodeBuffer(String text) {
        // conversion from xsymbols to unicode won't grow the array, so shouldn't
        // see a realloc
        StringBuffer unicodeBuf = new StringBuffer(text.length());

        Matcher m = xsymbolPat.matcher(text);

        while (m.find()) {
            String symbol = m.group();

            String unicode = symbolMap.get(symbol);
            if (unicode != null) {
                m.appendReplacement(unicodeBuf, unicode);
            } else {
                System.out.println("Warning: unknown xsymbol " + symbol);
                m.appendReplacement(unicodeBuf, symbol);
            }
        }
        m.appendTail(unicodeBuf);

        return unicodeBuf;
    }


    public static String[] xsymbolToUnicodeLines(String text) {
        String[] lines = xsymbolToUnicodeBuffer(text).toString().split("\\R");
        return lines;
    }

}

